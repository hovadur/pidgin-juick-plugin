; Script generated by the HM NIS Edit Script Wizard.
; v0.3    - Initial version, thanks pidgin-otr

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "pidgin-juick-plugin"
!define PRODUCT_VERSION "0.3"
!define PRODUCT_WEB_SITE "http://github.com/mad/${PRODUCT_NAME}"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "COPYING"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Russian"

LangString MUI_SURE ${LANG_ENGLISH} "Are you sure you want to uninstall $(^Name)?"
LangString MUI_SURE ${LANG_RUSSIAN} "Вы уверены в том, что желаете удалить $(^Name) и все компоненты программы?"
LangString MUI_UNINSTALLSUCCESS ${LANG_ENGLISH} "$(^Name) Uninstall was completed successfully."
LangString MUI_UNINSTALLSUCCESS ${LANG_RUSSIAN} "Удаление программы $(^Name) было успешно завершено."
LangString MUI_PIDGINPLUGINSNOTFIND ${LANG_ENGLISH} "Could not find pidgin plugin directory, ${PRODUCT_NAME}.dll not uninstalled!"
LangString MUI_PIDGINPLUGINSNOTFIND ${LANG_RUSSIAN} "Не найден каталог pidgin\plugins, ${PRODUCT_NAME}.dll не удален!"
LangString MUI_PIDGININSTALLNOTFIND ${LANG_ENGLISH} "Failed to find Pidgin installation. Please install Pidgin first"
LangString MUI_PIDGININSTALLNOTFIND ${LANG_RUSSIAN} "Не найдено, куда установлен Pidgin. Установите вначале Pidgin"
LangString MUI_PIDGINSTILLRUNNING ${LANG_ENGLISH} "${PRODUCT_NAME}.dll is busy. Probably Pidgin is still running. Please delete $PidginDir\plugins\${PRODUCT_NAME}.dll manually."
LangString MUI_PIDGINSTILLRUNNING ${LANG_RUSSIAN} "${PRODUCT_NAME}.dll занят. Возможно Pidgin запущен. Удалите $PidginDir\plugins\${PRODUCT_NAME}.dll вручную."
LangString MUI_PIDGINNEEDCLOSE ${LANG_ENGLISH} "${PRODUCT_NAME}.dll is busy. Please close Pidgin (including tray icon) and try again"
LangString MUI_PIDGINNEEDCLOSE ${LANG_RUSSIAN} "${PRODUCT_NAME}.dll занят. Выключите Pidgin (включая иконку в трее) и попробуйте снова"
LangString MUI_UNINSTALLPREVABORT ${LANG_ENGLISH} "Uninstalling of the previous version gave an error. Install aborted."
LangString MUI_UNINSTALLPREVABORT ${LANG_RUSSIAN} "Удаление предыдущей версии произошло с ошибками. Установка прервана."
LangString MUI_PRODUCTFOUND ${LANG_ENGLISH} "${PRODUCT_NAME} was already found on your system and will first be uninstalled"
LangString MUI_PRODUCTFOUND ${LANG_RUSSIAN} "${PRODUCT_NAME} уже находится на Вашей системе и вначале будет удален"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "setup.exe"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey HKEY_LOCAL_MACHINE SOFTWARE\${PRODUCT_NAME} "Install_Dir"
ShowInstDetails show
ShowUnInstDetails show

Var "PidginDir"

Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
FunctionEnd

Section "MainSection" SEC01
  ; uninstall previous ${PRODUCT_NAME} install if found.
  Call UnInstOld
  ;Check for pidgin installation
  Call GetPidginInstPath
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "SOFTWARE\${PRODUCT_NAME}" "pidgindir" "$PidginDir"

  SetOutPath "$PidginDir\locale"
  SetOverwrite on
  ; What the next line means is to recursively search locale
  ; and install all files under there named ${PRODUCT_NAME}.mo
  File /r "locale\${PRODUCT_NAME}.mo"

  SetOutPath "$INSTDIR"
  SetOverwrite on
  File "${PRODUCT_NAME}.dll"
  ; move to pidgin plugin directory, check if not busy (pidgin is running)
  call CopyDLL
  ; hard part is done, do the rest now.
  File "COPYING"
  File "ChangeLog"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
SectionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK $(MUI_UNINSTALLSUCCESS)
FunctionEnd

Function un.onInit
!insertmacro MUI_UNGETLANGUAGE
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 $(MUI_SURE) IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\COPYING"
  Delete "$INSTDIR\ChangeLog"

  RMDir "$INSTDIR"

  ReadRegStr $PidginDir HKLM Software\${PRODUCT_NAME} "pidgindir"
    IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" dodelete
  ReadRegStr $PidginDir HKCU Software\${PRODUCT_NAME} "pidgindir"
    IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" dodelete

  ReadRegStr $PidginDir HKLM Software\${PRODUCT_NAME} "pidgindir"
    IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" dodelete
  ReadRegStr $PidginDir HKCU Software\${PRODUCT_NAME} "pidgindir"
    IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" dodelete
  MessageBox MB_OK|MB_ICONINFORMATION $(MUI_PIDGINPLUGINSNOTFIND) IDOK ok
dodelete:
  Delete "$PidginDir\plugins\${PRODUCT_NAME}.dll"

  ; Find all the language dirs and delete ${PRODUCT_NAME}.mo in all of them
  Push $0
  Push $1
  FindFirst $0 $1 $PidginDir\locale\*
  loop:
    StrCmp $1 "" loopdone
    Delete $PidginDir\locale\$1\LC_MESSAGES\${PRODUCT_NAME}.mo
    FindNext $0 $1
    Goto loop
  loopdone:
  Pop $1
  Pop $0

  IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" 0 +2
    MessageBox MB_OK|MB_ICONINFORMATION $(MUI_PIDGINSTILLRUNNING)

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
ok:
  SetAutoClose true
SectionEnd

Function GetPidginInstPath
  Push $0
  ReadRegStr $0 HKLM "Software\pidgin" ""
    IfFileExists "$0\pidgin.exe" cont
    ReadRegStr $0 HKCU "Software\pidgin" ""
    IfFileExists "$0\pidgin.exe" cont
  Abort $(MUI_PIDGININSTALLNOTFIND)
;  MessageBox MB_OK|MB_ICONINFORMATION $(MUI_PIDGININSTALLNOTFIND)
;    Abort "Failed to find Pidgin installation. Please install Pidgin first."
cont:
  StrCpy $PidginDir $0
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "SOFTWARE\${PRODUCT_NAME}" "pidgindir" "$PidginDir"
FunctionEnd

Function UnInstOld
  Push $0
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString"
  IfFileExists "$0" deinst cont
deinst:
  MessageBox MB_OK|MB_ICONEXCLAMATION  $(MUI_PRODUCTFOUND)
  ; the uninstaller copies itself to temp and execs itself there, so it can delete
  ; everything including its own original file location. To prevent the installer and
  ; uninstaller racing you can't simply ExecWait.
  ; We hide the uninstall because otherwise it gets really confusing window-wise
  ;HideWindow
  ClearErrors
  ExecWait '"$0" _?=$INSTDIR'
  IfErrors 0 cont
    MessageBox MB_OK|MB_ICONEXCLAMATION $(MUI_UNTEXT_ABORT_TITLE) ; "Uninstall failed or aborted"
      Abort $(MUI_UNINSTALLPREVABORT)
    ;BringToFront
cont:
FunctionEnd

Function CopyDLL
  SetOverwrite try
  ClearErrors
  ; 3 hours wasted so you guys don't need a reboot!
  ; Rename /REBOOTOK "$INSTDIR\${PRODUCT_NAME}.dll" "$PidginDir\plugins\${PRODUCT_NAME}.dll"
  IfFileExists "$PidginDir\plugins\${PRODUCT_NAME}.dll" 0 copy ; remnant or uninstall prev version failed
  Delete "$PidginDir\plugins\${PRODUCT_NAME}.dll"
copy:
  ClearErrors
  Rename "$INSTDIR\${PRODUCT_NAME}.dll" "$PidginDir\plugins\${PRODUCT_NAME}.dll"
  IfErrors dllbusy
    Return
dllbusy:
  MessageBox MB_RETRYCANCEL $(MUI_PIDGINNEEDCLOSE) IDCANCEL cancel
  Delete "$PidginDir\plugins\${PRODUCT_NAME}.dll"
  Goto copy
  Return
cancel:
  Abort "Installation of ${PRODUCT_NAME} aborted"
FunctionEnd
